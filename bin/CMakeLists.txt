add_executable(
    mbgl-cache
    ${PROJECT_SOURCE_DIR}/bin/cache.cpp
)

target_link_libraries(
    mbgl-cache
    PRIVATE
        Mapbox::Base
        Mapbox::Base::Extras::args
        mbgl-compiler-options
        mbgl-core
)

add_executable(
    mbgl-offline
    ${PROJECT_SOURCE_DIR}/bin/offline.cpp
)

target_link_libraries(
    mbgl-offline
    PRIVATE Mapbox::Base::Extras::args mbgl-compiler-options mbgl-core
)

# add_executable(
#     mbgl-render
#     ${PROJECT_SOURCE_DIR}/bin/render.cpp
# )

find_package(JNI REQUIRED)
include_directories(${JNI_INCLUDE_DIRS})

add_library(
    mbgl-render
    SHARED
    ${PROJECT_SOURCE_DIR}/bin/render.cpp
)

target_link_libraries(
    mbgl-render
    PRIVATE Mapbox::Base::Extras::args mbgl-compiler-options mbgl-core
)

if(MSVC)
    find_package(libuv REQUIRED)

    target_link_libraries(
        mbgl-cache PRIVATE uv_a
    )

    target_link_libraries(
        mbgl-offline PRIVATE uv_a
    )

    target_link_libraries(
        mbgl-render PRIVATE uv_a
    )

    set_source_files_properties(
        ${PROJECT_SOURCE_DIR}/bin/cache.cpp
        ${PROJECT_SOURCE_DIR}/bin/offline.cpp
        ${PROJECT_SOURCE_DIR}/bin/render.cpp
        PROPERTIES COMPILE_FLAGS "/wd4244"
    )
endif()

install(TARGETS mbgl-offline mbgl-render RUNTIME DESTINATION bin)

# FIXME: CI must have a valid token
#
# add_test(NAME mbgl-offline-tool-test COMMAND mbgl-offline -s maptiler://maps/hybrid --maxZoom=0 WORKING_DIRECTORY
# ${PROJECT_SOURCE_DIR} )
#
# add_test(NAME mbgl-render-tool-test COMMAND mbgl-render WORKING_DIRECTORY ${PROJECT_SOURCE_DIR} )
